// PosAcc関数にて画面をサーチし情報取得
// "X,　Y,　幅,　高さ,　ACC_ACC/ACC_API,　ACC_NAME,　ACC_VALUE"  (位置はクライアント座標)
//

CONST DEF_XW = 20   // Matrix size X
CONST DEF_YH = 8    // Matrix size Y

dbg_id = GETID("UWSC Debugger","TFOya")
CtrlWin(dbg_id, MIN)
Try
  Fukidasi("POSACCにて画面をサーチし情報を取得<#CR>  ウィンドウにカーソルを合わせから Shiftキーを押してください<#CR>  キャンセル： ESCキー")
  Repeat
     if GetKeyState(VK_ESC) then Exit
     Sleep(0.02)
  Until GetKeyState(VK_SHIFT)
  Fukidasi()

  CONST MAX_LENGTH = 64  // Maximum number of characters
  PUBLIC fpid
  fpid = GETID(GET_FROMPOINT_WIN)
  Fukidasi("サーチ中  (キャンセル：ESCキー)", 0, 0)
  ACW(fpid)
  hashtbl tbl
  for y = DEF_YH/2 to Status(fpid,ST_CLHEIGHT) step DEF_YH
     for x = DEF_XW/2 to Status(fpid,ST_CLWIDTH) step DEF_XW
        if GetKeyState(VK_ESC) then Exit
        MMV(Status(fpid,ST_CLX)+x, Status(fpid,ST_CLY)+y)
        if GETID(GET_FROMPOINT_WIN) <> fpid then Continue
        loc = PosAcc(fpid, x, y, ACC_LOCATION or ACC_BACK)
        if tbl[loc, HASH_EXISTS] then Continue
        s1=PosAcc(fpid,x,y,ACC_BACK); if Length(s1)>MAX_LENGTH then s1=Copy(s1,1,MAX_LENGTH)+"..."
        s2=PosAcc(fpid,x,y,ACC_NAME or ACC_BACK); if Length(s2)>64 then s2=Copy(s2,1,MAX_LENGTH)+"..."
        s3=PosAcc(fpid,x,y,ACC_VALUE or ACC_BACK); if Length(s3)>64 then s3=Copy(s3,1,MAX_LENGTH)+"..."
        tbl[loc] = s1+", "+s2+", "+s3
     next
  next
  Fukidasi()

  if Status(fpid, ST_WIN64)
     form = "X,　Y,　幅,　高さ,　ACC_ACC,　ACC_NAME,　ACC_VALUE" // 64bit: not support ACC_API
  else
     form = "X,　Y,　幅,　高さ,　ACC_ACC/ACC_API,　ACC_NAME,　ACC_VALUE"
  endif
  form = form + "<BR><select name='hlist' size='_DEF_SIZE_'>"
  lcnt = 0
  for n = 0 to Length(tbl)-1
     vs = tbl[n, HASH_VAL]
     if Trim(Replace(vs, ",", "")) = "" then Continue
     form = form + "<option>" + tbl[n, HASH_KEY] +", "+ vs + "</option>"
     lcnt = lcnt + 1
  next
  form = form + "</select>"
  if lcnt < 2 then lcnt = 2
  form = Replace(form, "_DEF_SIZE_", lcnt)
  obj = CREATEFORM("about:blank", "ACC 情報サーチ", True, 0, 540, 360, 0 ,0)
  obj.Document.write(form)
  OLEEVENT(obj.Document.body.all["hlist"], "HTMLSelectElementEvents2", "onclick", "fucOnClick")
  CtrlWin(GETID(GET_FORM_WIN), ACTIVATE)
  Rectan("<#DBL><#DBL>")
  while obj.Visible
     if GetKeyState(VK_ESC) then break
     Sleep(0.1)
  wend
  CtrlWin(GETID(GET_FORM_WIN), NOTOPMOST)
  Rectan("")
Finally
  CtrlWin(dbg_id, NORMAL)
EndTry
// --- main end ---

// クリックされた
Procedure fucOnClick()
   if ! Status(fpid, ST_ISID) then Exit
   Rectan(GETFORMDATA("hlist"))   // Draw rectangle
Fend

// 赤四角描画
DEF_DLL GetDC(Hwnd):long:user32
DEF_DLL ReleaseDC(Hwnd, Long):long:user32
DEF_DLL SelectObject(long, long):long:gdi32
DEF_DLL Rectangle(long, long, long, long, long):long:gdi32
DEF_DLL CreatePen(long, long, long):long:gdi32
DEF_DLL GetStockObject(long):long:gdi32
DEF_DLL DeleteObject(long):long:gdi32
CONST PS_SOLID = 0
CONST NULL_BRUSH = 5
Procedure Rectan(s)
   CtrlWin(fpid, NOTOPMOST)      // Clear old line
   CtrlWin(GETID(GET_FORM_WIN), TOPNOACTV)
   if s = "" then Exit
   dc = GetDC(0)
   pen = CreatePen(PS_SOLID, 3, $0000FF)
   SelectObject(dc, pen)
   SelectObject(dc, GetStockObject(NULL_BRUSH))
   if Copy(s, 1, 1) = "<#DBL>"    // Top Level
      x1 = Status(fpid,ST_CLX)
      y1 = Status(fpid,ST_CLY)
      x2 = x1 + Status(fpid,ST_CLWIDTH)
      y2 = y1 + Status(fpid,ST_CLHEIGHT)
   else
      ary = Split(s, ",", True, True)
      x1 = ary[0] + Status(fpid,ST_CLX)
      y1 = ary[1] + Status(fpid,ST_CLY)
      x2 = x1 + ary[2]
      y2 = y1 + ary[3]
   endif
   Rectangle(dc, x1, y1, x2, y2)
   DeleteObject(pen)
   ReleaseDC(0, dc)
Fend
