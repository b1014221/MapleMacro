// ハンドルを持つオブジェクトの情報取得
// "X, Y, 幅, 高さ, クラス名, キャプション"  (可視状態の物のみ、位置はクライアント座標)
//

dbg_id = GETID("UWSC Debugger","TFOya")
CtrlWin(dbg_id, MIN)
Try
  Fukidasi("ハンドルを持つオブジェクトの情報の表示<#CR>  ウィンドウにカーソルを合わせから Shiftキーを押してください<#CR>  キャンセル： ESCキー")
  Repeat
     if GetKeyState(VK_ESC) then Exit
     Sleep(0.02)
  Until GetKeyState(VK_SHIFT)
  Fukidasi()

  PUBLIC fpid, form, lcnt
  fpid = GETID(GET_FROMPOINT_WIN)
  form = "X,　Y,　幅,　高さ,　<#DBL>クラス名<#DBL>,　<#DBL>キャプション<#DBL>"
  form = form + "<BR><select name='hlist' size='_DEF_SIZE_'>"
  lcnt = 0
  HndInfo(fpid, 0)
  form = form + "</select>"
  if lcnt < 2 then lcnt = 2
  form = Replace(form, "_DEF_SIZE_", lcnt)
  obj = CREATEFORM("about:blank", "ハンドル所持オブジェクト", True, 0, 540, 360, 0 ,0)
  obj.Document.write(form)
  OLEEVENT(obj.Document.body.all["hlist"], "HTMLSelectElementEvents2", "onclick", "fucOnClick")
  CtrlWin(GETID(GET_FORM_WIN), ACTIVATE)
  Rectan("<#DBL><#DBL>")
  while obj.Visible
     if GetKeyState(VK_ESC) then break
     Sleep(0.1)
  wend
  CtrlWin(GETID(GET_FORM_WIN), NOTOPMOST)
  Rectan("")
Finally
  CtrlWin(dbg_id, NORMAL)
EndTry
// --- main end ---

// ハンドル再帰所得
CONST LVL_MARK = " > "   // Level indication
CONST MAX_LENGTH = 64    // Maximum number of characters
Procedure HndInfo(id, lvl)
   if lvl = 0
      s = ""
   else
      s = (Status(id,ST_CLX)-Status(fpid,ST_CLX))+", "+(Status(id,ST_CLY)-Status(fpid,ST_CLY))+", "+Status(id,ST_WIDTH)+", "+Status(id,ST_HEIGHT)+", "
   endif
   titl = Status(id,ST_TITLE)
   if Length(titl)>MAX_LENGTH then titl = Copy(titl,1,MAX_LENGTH)+"..."
   s = s +"<#DBL>"+ Status(id,ST_CLASS) +"<#DBL>, <#DBL>"+ titl +"<#DBL>"
   if Pos(s, form)>0 then Exit
   form = form + "<option>" + Format(LVL_MARK,lvl*Length(LVL_MARK)) + s + "</option>"
   lcnt = lcnt + 1
   for n = 0 to GETALLWIN(id)-1
       HndInfo(ALL_WIN_ID[n], lvl+1)
   next
Fend

// クリックされた
Procedure fucOnClick()
   if ! Status(fpid, ST_ISID) then Exit
   Rectan(GETFORMDATA("hlist"))   // Draw rectangle
Fend

// 赤四角描画
DEF_DLL GetDC(Hwnd):long:user32
DEF_DLL ReleaseDC(Hwnd, Long):long:user32
DEF_DLL SelectObject(long, long):long:gdi32
DEF_DLL Rectangle(long, long, long, long, long):long:gdi32
DEF_DLL CreatePen(long, long, long):long:gdi32
DEF_DLL GetStockObject(long):long:gdi32
DEF_DLL DeleteObject(long):long:gdi32
CONST PS_SOLID = 0
CONST NULL_BRUSH = 5
Procedure Rectan(s)
   CtrlWin(fpid, NOTOPMOST)      // Clear old line
   CtrlWin(GETID(GET_FORM_WIN), TOPNOACTV)
   if s = "" then Exit
   dc = GetDC(0)
   pen = CreatePen(PS_SOLID, 3, $0000FF)
   SelectObject(dc, pen)
   SelectObject(dc, GetStockObject(NULL_BRUSH))
   if Copy(s, 1, 1) = "<#DBL>"    // Top Level
      x1 = Status(fpid,ST_CLX)
      y1 = Status(fpid,ST_CLY)
      x2 = x1 + Status(fpid,ST_CLWIDTH)
      y2 = y1 + Status(fpid,ST_CLHEIGHT)
   else
      s = Replace(s, Trim(LVL_MARK), "")  // Delete Level mark
      ary = Split(s, ",", True, True)
      x1 = ary[0] + Status(fpid,ST_CLX)
      y1 = ary[1] + Status(fpid,ST_CLY)
      x2 = x1 + ary[2]
      y2 = y1 + ary[3]
   endif
   Rectangle(dc, x1, y1, x2, y2)
   DeleteObject(pen)
   ReleaseDC(0, dc)
Fend
