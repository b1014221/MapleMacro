// (C)2010- メイプルストーリーマクロ生活 http://maplez2.blog90.fc2.com/
// 一部・全部に関わらず、転載・転売等は一切お断りします。
// 違反された場合、他の購入者の権利をを守るためにも、
// 刑事告訴等の法的措置を取らざるを得ません。
// その場合、民事提訴にて損害賠償の請求をさせて頂きます。

THREAD 並列処理() //一番↓で指定した処理を、メイン部分と並列で実行

//▼▼自動狩りメイン部分ココから▼▼
ACW(GETID("MapleStory","MapleStoryClass"),1,1)

//▼▼ペットのエサの設定１▼▼
PET = GETTIME( 900 / 86400 )
//▲▲ココまで▲▲

WHILE TRUE

//▼▼まず、正しいマップにいるか確認▼▼
WHILE TRUE
IF CHKIMG("../画像/リプレ周辺.BMP",0,0,0,100,100) THEN BREAK
WEND

//▼▼中に入る処理▼▼
FOR X = 1 TO 5
KBD(VK_UP,1,1000)
KBD(VK_UP,2,100)
SLEEP(5)
IF !CHKIMG("../画像/リプレ周辺.BMP",0,0,0,100,100) THEN BREAK
NEXT

//▼▼6600秒後の時間を記憶▼▼
MD = GETTIME( 6600 / 86400 )

KBD(VK_HOME,0,100)

//▼▼ちょっと右に移動▼▼
KBD(VK_RIGHT,1,3000)
KBD(VK_RIGHT,2,1000)

//▼▼上段へ降りて左を向く▼▼
KBD(VK_DOWN,1,100)
FOR X = 1 TO 3
KBD(VK_C,0,100)
NEXT
KBD(VK_LEFT,1,100)
KBD(VK_LEFT,2,100)
KBD(VK_DOWN,2)
SLEEP(0.5)

//▼▼レーザーで攻撃▼▼
FOR X = 1 TO 7
KBD(VK_CTRL,0,100)
NEXT

//▼▼ここから繰り返しスタート▼▼
WHILE TRUE

G = 4

IF CHKIMG("../画像/リプレ周辺.BMP",0,0,0,100,100) THEN CALL ../共通/ログアウト.UWS

//薬の残量を確認、HP薬が9個以下、MP薬が0個だった場合はログアウト
IF CHKIMG("../画像/十字旅団最上級体力水薬9.bmp",0,0,0,800,580) THEN CALL ../共通/ログアウト.UWS
IF CHKIMG("../画像/十字旅団最上級魔力水薬0.bmp",0,0,0,800,580) THEN CALL ../共通/ログアウト.UWS

//▼▼A地点へ移動▼▼
KBD(VK_LEFT,1,200)
KBD(VK_LEFT,2,3500) // ←3500の数値を増減させて調整

KBD(VK_HOME,0,100)

//▼▼レーザーで攻撃▼▼
FOR X = 1 TO 7
KBD(VK_CTRL,0,100)
NEXT

//▼▼補助スキル▼▼
IFB G > 3
KBD(VK_G,0,1000)
SLEEP(0.5)
G = 0
ENDIF

IF CHKIMG("../画像/リプレ周辺.BMP",0,0,0,100,100) THEN CALL ../共通/ログアウト.UWS

//▼▼B地点へ移動▼▼
KBD(VK_LEFT,1,1000)
KBD(VK_LEFT,2,1500) // ←1500の数値を増減させて調整

//▼▼中段へ降りて右を向く▼▼
KBD(VK_DOWN,1,300)
FOR X = 1 TO 3
KBD(VK_C,0,200)
NEXT
KBD(VK_RIGHT,1,100)
KBD(VK_RIGHT,2,100)
KBD(VK_DOWN,2)
SLEEP(0.5)

//▼▼レーザーで攻撃▼▼
FOR X = 1 TO 7
KBD(VK_CTRL,0,100)
NEXT

IF CHKIMG("../画像/リプレ周辺.BMP",0,0,0,100,100) THEN CALL ../共通/ログアウト.UWS

//▼▼C地点へ移動▼▼
KBD(VK_LEFT,1,500)
SLEEP(1)
FOR X = 1 TO 3
KBD(VK_C,0,100)
NEXT
KBD(VK_LEFT,2,500)

//▼▼レーザーで攻撃▼▼
FOR X = 1 TO 7
KBD(VK_CTRL,0,100)
NEXT

IF CHKIMG("../画像/リプレ周辺.BMP",0,0,0,100,100) THEN CALL ../共通/ログアウト.UWS

//▼▼D地点へ移動▼▼
KBD(VK_LEFT,1,1000)
KBD(VK_LEFT,2,3200) // ←3200の数値を増減させて調整

//▼▼レーザーで攻撃▼▼
FOR X = 1 TO 7
KBD(VK_CTRL,0,100)
NEXT

IF CHKIMG("../画像/リプレ周辺.BMP",0,0,0,100,100) THEN CALL ../共通/ログアウト.UWS

//▼▼下段へ降りる▼▼
KBD(VK_DOWN,1,1000)
FOR X = 1 TO 3
KBD(VK_C,0,100)
NEXT
KBD(VK_DOWN,2,300)
SLEEP(0.5)

//▼▼レーザーで攻撃▼▼
FOR X = 1 TO 7
KBD(VK_CTRL,0,100)
NEXT

IF CHKIMG("../画像/リプレ周辺.BMP",0,0,0,100,100) THEN CALL ../共通/ログアウト.UWS

//▼▼右を向く▼▼
KBD(VK_RIGHT,1,1200)
KBD(VK_RIGHT,2,100)

//▼▼レーザーで攻撃▼▼
FOR X = 1 TO 7
KBD(VK_CTRL,0,100)
NEXT

IF CHKIMG("../画像/リプレ周辺.BMP",0,0,0,100,100) THEN CALL ../共通/ログアウト.UWS

//▼▼E地点へ移動▼▼
KBD(VK_RIGHT,1,1000)
KBD(VK_RIGHT,2,3300) // ←3300の数値を増減させて調整

//▼▼レーザーで攻撃▼▼
FOR X = 1 TO 7
KBD(VK_CTRL,0,100)
NEXT

IF CHKIMG("../画像/リプレ周辺.BMP",0,0,0,100,100) THEN CALL ../共通/ログアウト.UWS

//▼▼F地点へ移動▼▼
KBD(VK_RIGHT,1,1000)
KBD(VK_RIGHT,2,2500) // ←2500の数値を増減させて調整

//▼▼レーザーで攻撃▼▼
FOR X = 1 TO 7
KBD(VK_CTRL,0,100)
NEXT

IF CHKIMG("../画像/リプレ周辺.BMP",0,0,0,100,100) THEN CALL ../共通/ログアウト.UWS

//▼▼ロケットブースターで最上段へ移動▼▼
SLEEP(1)
FOR X = 1 TO 15
KBD(VK_SHIFT,0,100)
NEXT
SLEEP(2.5)
KBD(VK_RIGHT,1)
FOR X = 1 TO 15
KBD(VK_SHIFT,0,100)
NEXT
KBD(VK_RIGHT,2,6000) // 右端まで歩いてズレを修正します

IF CHKIMG("../画像/リプレ周辺.BMP",0,0,0,100,100) THEN CALL ../共通/ログアウト.UWS

//▼▼左を向く▼▼
KBD(VK_LEFT,1,100)
KBD(VK_LEFT,2,100)

//▼▼レーザーで攻撃▼▼
FOR X = 1 TO 7
KBD(VK_CTRL,0,100)
NEXT

G = G + 1

//▼▼ペットのエサの設定２▼▼
IFB GETTIME() > PET
KBD(VK_T,0,100)// ←Tを押す命令　必要なら変更してください
SLEEP(0.1)
PET = GETTIME( 900 / 86400 )
ENDIF
//▲▲ココまで▲▲

//▼▼最初に記憶した時間を過ぎていたら、BREAKでWENDの下へ飛ぶ▼▼
IF GETTIME() > MD THEN BREAK

WEND

//▼▼ポータルへ移動▼▼
KBD(VK_RIGHT,1)
FOR X = 1 TO 10
KBD(VK_C,0,1000)
NEXT
KBD(VK_RIGHT,2,1000)
KBD(VK_LEFT,1,100)
KBD(VK_LEFT,2,1300)
FOR X = 1 TO 50
KBD(VK_SHIFT,0,100)
NEXT
KBD(VK_RIGHT,1,1000)
KBD(VK_RIGHT,2,2000)
KBD(VK_LEFT,1,100)
KBD(VK_LEFT,2,400)

//▼▼外へ出る処理▼▼
FOR X = 1 TO 10
KBD(VK_UP,1,100)
KBD(VK_UP,2,100)
SLEEP(5)
IF CHKIMG("../画像/リプレ周辺.BMP",0,0,0,200,200) THEN BREAK
KBD(VK_LEFT,1,100)
KBD(VK_LEFT,2,80)
NEXT

WEND


WEND
//▲▲自動狩りメイン部分ココまで▲▲


PROCEDURE 並列処理()
WHILE TRUE
//▼▼自動狩りメイン部分と並列して繰り返し行う処理ココから▼▼



//▲▲ココまで▲▲
WEND
FEND
