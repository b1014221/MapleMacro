//=========================================//
// Map Name    : ケーヴロード                  //
//=========================================//
// Mob Name    : 
// Mob Level   : 
// Mob HP      : 
// Mob Exp     : 
//=========================================//
// comment     : None
// param       : None
// return      : None
// ========================================//
// Display Dpl : 800x600 or 1366x768
//=========================================//
// Copy Right (C) 2018 All Right Reserved. 
//   @author k.kawabata @kawaken1025
//     Create Date : 2018/08/15
//=========================================//

//MapleAPI : LogWriter.uws , MapleLibrary.uws , UseSkillFiveJob.uws
CALL ../MapleAPI/MapleAPI.uws;
//import Luminous skillKeySetting
CALL KeySetting.uws;
//Illium Utility Class
CALL IlliumUtil.uws;
//Move Window initSetting x = 1 , y = 1
lib.activeWindow();
//multiThread checkRedPoint and checkMineralization
thread lib.parallelProgram();

while true
    skillTime = gettime( 180 / 86400 );
    skill.illiumSupportSkill();
    lib.checkFamiliarPower();
    while true
        util.moveSoulOfCrystalAttack(VK_LEFT);
        checkYellowPoint();
        util.moveSoulOfCrystalAttack(VK_RIGHT);
        checkYellowPoint();
        if gettime() > skillTime then break;
    wend
wend

function checkYellowPoint()

    ifb chkimg(lib.picPathHelper("yellowPoint"),0,40,120,86,142)
        KBD(VK_B,0,500);
        SLEEP(1.2);
        KBD(VK_RIGHT,1,500);
        while true
            if chkimg(lib.picPathHelper("yellowPoint"),0,84,101,99,122) then break;
        wend
        KBD(VK_RIGHT,2,100);
    endif

    ifb chkimg(lib.picPathHelper("yellowPoint"),0,100,0,160,142)
        KBD(VK_B,0,500);
        SLEEP(1.2);
        KBD(VK_LEFT,1,500);
        while true
            if chkimg(lib.picPathHelper("yellowPoint"),0,84,101,99,122) then break;
        wend
        KBD(VK_LEFT,2,100);
    endif

    ifb chkimg(lib.picPathHelper("yellowPoint"),0,0,0,33,133)
        KBD(VK_RIGHT,1,500);
        while true
            if chkimg(lib.picPathHelper("yellowPoint"),0,50,121,75,135) then break;
        wend
        KBD(VK_RIGHT,2,100);
        KBD(VK_B,0,500);
        SLEEP(1);
        KBD(VK_RIGHT,1,300)
        while true
            if chkimg(lib.picPathHelper("yellowPoint"),0,84,101,99,122) then break;
        wend
        KBD(VK_RIGHT,2,100);
    endif

    result = 0;
fend

function goLeft()

    //ここから左へ行く処理
    KBD(VK_LEFT,1,1000);
    while true
        KBD(VK_SPACE,0,500);
        if chkimg("../picture/黄点.bmp",0,0,0,70,130) THEN break;
    wend
    KBD(VK_LEFT,2,1000);

    result = 0;

fend

function goRight()

    //ここから右へ行く処理
    KBD(VK_RIGHT,1,1000)
    while true
        KBD(VK_SPACE,0,500);
        if chkimg("../picture/黄点.bmp",0,170,80,220,143) THEN break;
    wend
    KBD(VK_RIGHT,2,1000);
    KBD(VK_LEFT,1,500);
    KBD(VK_LEFT,2,100);

    upStage();
    result = 0;
fend

function upStage()
    KBD(VK_LEFT,1,1000);
    KBD(VK_LEFT,2,1250);
    KBD(VK_B,0,500);
    SLEEP(1);
    KBD(VK_LEFT,1,1000);
    KBD(VK_SPACE,0,1000);
    KBD(VK_LEFT,2,1000);
    result = 0;
fend